<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>